{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUser","userId","users","find","preparedTodos","App","useState","selectedUserId","setSelectedUserId","setTitle","setTodos","titleError","setTitleError","selectedUserError","setSelectedUserError","action","method","onSubmit","event","preventDefault","spaces","trim","includes","i","length","validation","newTodo","Math","max","Number","prevTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1629f3.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport todosFromServer from './api/todos';\nimport users from './api/users';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = users.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(preparedTodos);\n  const [titleError, setTitleError] = useState(false);\n  const [selectedUserError, setSelectedUserError] = useState(false);\n\n  const validation = () => {\n    let spaces = 0;\n\n    if (selectedUserId && title.trim()) {\n      return true;\n    }\n\n    if (selectedUserId === '') {\n      setSelectedUserError(true);\n    }\n\n    if (title.includes(' ')) {\n      for (let i = 0; i < title.length; i += 1) {\n        if (title[i] === ' ') {\n          spaces += 1;\n        }\n      }\n    }\n\n    if (title === '' || spaces === title.length) {\n      setTitleError(true);\n    }\n\n    return false;\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!validation()) {\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n    const newTodo = {\n      id: newId,\n      title,\n      userId: +selectedUserId,\n      completed: false,\n      user: getUser(Number(selectedUserId)),\n    };\n\n    setTodos(prevTodos => ([...prevTodos, newTodo]));\n    setSelectedUserId('');\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              name=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event => {\n                setTitle(event.target.value);\n                setTitleError(false);\n              })}\n            />\n          </label>\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              name=\"user\"\n              onChange={(event) => {\n                setSelectedUserId(event.target.value);\n                setSelectedUserError(false);\n              }}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {users.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {selectedUserError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}